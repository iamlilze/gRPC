syntax = "proto3";

package auth;

option go_package = "github.com/iamlilze/gRPC/api/auth";

// AuthService provides authentication and authorization functionality
service AuthService {
  // Register creates a new user account
  rpc Register(RegisterRequest) returns (RegisterResponse);
  
  // Login authenticates a user and returns a token
  rpc Login(LoginRequest) returns (LoginResponse);
  
  // ValidateToken checks if a token is valid
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
  
  // Logout invalidates a user's token
  rpc Logout(LogoutRequest) returns (LogoutResponse);
}

// RegisterRequest contains information for user registration
message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

// RegisterResponse contains the result of registration
message RegisterResponse {
  string user_id = 1;
  string message = 2;
  bool success = 3;
}

// LoginRequest contains user credentials
message LoginRequest {
  string username = 1;
  string password = 2;
}

// LoginResponse contains authentication token
message LoginResponse {
  string token = 1;
  string user_id = 2;
  bool success = 3;
  string message = 4;
}

// ValidateTokenRequest contains the token to validate
message ValidateTokenRequest {
  string token = 1;
}

// ValidateTokenResponse contains validation result
message ValidateTokenResponse {
  bool valid = 1;
  string user_id = 2;
  string username = 3;
}

// LogoutRequest contains the token to invalidate
message LogoutRequest {
  string token = 1;
}

// LogoutResponse contains logout result
message LogoutResponse {
  bool success = 1;
  string message = 2;
}
